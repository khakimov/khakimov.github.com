<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: tips | curious and driven]]></title>
  <link href="http://khakimov.github.com/blog/categories/tips/atom.xml" rel="self"/>
  <link href="http://khakimov.github.com/"/>
  <updated>2013-10-01T21:52:14-07:00</updated>
  <id>http://khakimov.github.com/</id>
  <author>
    <name><![CDATA[khakimov]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[X-RateLimit-Limit API]]></title>
    <link href="http://khakimov.github.com/blog/2012/06/18/x-ratelimit-limit-api/"/>
    <updated>2012-06-18T14:38:00-07:00</updated>
    <id>http://khakimov.github.com/blog/2012/06/18/x-ratelimit-limit-api</id>
    <content type="html"><![CDATA[<p>some api have a limit requests, like to 5000 per hour as github has:
○ curl -i https://api.github.com/users/whatever</p>

<p><code>
HTTP/1.1 200 OK
Status: 200 OK
X-RateLimit-Limit: 5000
X-RateLimit-Remaining: 4966
</code></p>

<p>or angel.co 1000 per hour requests:</p>

<p><code>
○ curl -i http://api.angel.co/
...
Server: nginx
X-RateLimit-Limit: 1000
X-RateLimit-Remaining: 978
</code></p>

<p>Never've seen this before :lame, but as tip - if you are building API and want to limit requests check this link <a href="http://www.ruby-forum.com/topic/201555">http://www.ruby-forum.com/topic/201555</a>, from flip side you can use it as a counter.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[tips and tricks]]></title>
    <link href="http://khakimov.github.com/blog/2012/03/15/tips-and-tricks/"/>
    <updated>2012-03-15T17:15:00-07:00</updated>
    <id>http://khakimov.github.com/blog/2012/03/15/tips-and-tricks</id>
    <content type="html"><![CDATA[<p>Class methods are usually called with the double colon.</p>

<p>The respond_to? method is really nice and I plead that you never forget
it’s there. The respond_to? checks any object to be sure that it has a
certain method. It then gives back a true or false.</p>

<p>.collect keeps the answer the block gives back and adds it to a new
Array. The collect method is the perfect way of building a new Array
which is based on the items in an existing Array.</p>

<p>Always remember that a Module is only an inn. A roof over their heads.
It is not a self-aware Class and, therefore, cannot be brought to life
with new.</p>

<p>``` ruby
class SkatingContest
   def the_winner; @the_winner; end
   def the_winner=( name )</p>

<pre><code> unless name.respond_to? :to_str
   raise ArgumentError, "The winner's name must be a String,
     not a math problem or a list of names or any of that business." 
 end
 @the_winner = name
</code></pre>

<p>   end
 end
```</p>

<h1>Adding reference column:</h1>

<p>When you are modifying an existing table then references will not work. And actually, it is not really necessary when integer will work just as well.</p>

<p>I'd say the advantage of using references instead of a plain integer is that the model will be predefined with belongs_to and since the model is already created and will not be affected when you migrate something existing, the purpose is kind of lost.</p>

<p>So I would do like this instead:</p>

<p><code>
rails g migration add_user_id_to_tester user_id:integer
</code></p>

<p>And then manually add belongs_to :user in the Tester model</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[C-style shorthand conditional operator ?]]></title>
    <link href="http://khakimov.github.com/blog/2012/03/07/c-style-shorthand-conditional-operator/"/>
    <updated>2012-03-07T19:15:00-08:00</updated>
    <id>http://khakimov.github.com/blog/2012/03/07/c-style-shorthand-conditional-operator</id>
    <content type="html"><![CDATA[<p><code>ruby C-style shorthand conditional operator
1 == 2 ? "true value" : "false value"
</code></p>

<p>Returns "false value"</p>
]]></content>
  </entry>
  
</feed>
