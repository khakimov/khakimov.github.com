<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: puzzlenode | curious and driven]]></title>
  <link href="http://khakimov.github.com/blog/categories/puzzlenode/atom.xml" rel="self"/>
  <link href="http://khakimov.github.com/"/>
  <updated>2013-10-09T10:20:07-07:00</updated>
  <id>http://khakimov.github.com/</id>
  <author>
    <name><![CDATA[khakimov]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Puzzle Node #1]]></title>
    <link href="http://khakimov.github.com/blog/2012/06/04/puzzle-node-number-1/"/>
    <updated>2012-06-04T13:21:00-07:00</updated>
    <id>http://khakimov.github.com/blog/2012/06/04/puzzle-node-number-1</id>
    <content type="html"><![CDATA[<p>First of all I'm not going to spoil here any solution, just my thoughts about solving this. In my case the main problem with puzzles is focus. You don't need to be awesome programmer to solve it, just need to understand what to solve and then just write few lines of code.</p>

<p><a href="http://puzzlenode.com/puzzles/1-international-trade">Puzzle</a> <strong>"International trade"</strong> has two files. The first is an XML file containing the conversion rates for exchanging one currency with another. The second is a CSV file containing sales data by transaction for an international business. Your goal is to parse all the transactions and return the grand total of all sales for a given item. Currently I stuck with <em>Some conversion rates are missing; you will need to derive them using the information provided.</em></p>

<p>It means if we have pair EUR/USD and EUR/AUD we have to derive USD/AUD.</p>

<p>EUR/USD 1.2494 -> USD/EUR 0.8003
EUR/AUD 1.2846 -> AUD/EUR 0.7785
USD/AUD 1.2846 / 1.2494 or 0.8003 * 1.2846 or 0.8003 / 0.7785 = 1.028</p>

<p>Ok, SAMPLE_RATES.xml has this curr</p>

<p>```xml
&lt;?xml version="1.0"?>
<rates>
  <rate></p>

<pre><code>&lt;from&gt;AUD&lt;/from&gt;
&lt;to&gt;CAD&lt;/to&gt;
&lt;conversion&gt;1.0079&lt;/conversion&gt;
</code></pre>

<p>  </rate>
  <rate></p>

<pre><code>&lt;from&gt;CAD&lt;/from&gt;
&lt;to&gt;USD&lt;/to&gt;
&lt;conversion&gt;1.0090&lt;/conversion&gt;
</code></pre>

<p>  </rate>
  <rate></p>

<pre><code>&lt;from&gt;USD&lt;/from&gt;
&lt;to&gt;CAD&lt;/to&gt;
&lt;conversion&gt;0.9911&lt;/conversion&gt;
</code></pre>

<p>  </rate>
</rates>
```</p>

<p>our program should convert and find USD/AUD. Let's do it on the papper and then code.</p>

<p>AUD/CAD 1.0079
CAD/USD 1.0090</p>

<p>USD/CAD 0.9911</p>

<p>USD/AUD ?      <br/>
USD/CAD 0.9911 / AUD/CAD    1.0079 = 0.9833</p>

<p>To find USD/AUD I should devided USD/CAD and AUD/CAD. So, in our case if we are looking for USD/AUD - USD/$CUR devided AUD/$CUR. If we don't have USD/$CUR we can convert $CUR/USD to USD/$CUR just devided 1/rate.</p>

<ol>
<li>Build hash with current rates.</li>
<li>Derive inverted pair. USD/CAD -> CAD/USD (deviding 1/currency)</li>
<li>Find the pair that need to find.</li>
</ol>


<p>few days later I've decided that is not good solution. Here is new refactored version:</p>

<ol>
<li>Build hash with current rates.</li>
<li>Derive with recursion. For example if we have AUD/CAD and CAD/USD we just derive AUD to CAD and then CAD to USD, so we will get AUD/USD.</li>
</ol>


<p>ps: yea, I've solved it. Going to try <a href="http://puzzlenode.com/puzzles/2-cheap-tourist-fast-tourist">next one</a>.</p>
]]></content>
  </entry>
  
</feed>
