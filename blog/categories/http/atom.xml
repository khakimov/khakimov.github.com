<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: http | curious and driven]]></title>
  <link href="http://khakimov.github.com/blog/categories/http/atom.xml" rel="self"/>
  <link href="http://khakimov.github.com/"/>
  <updated>2013-10-10T09:47:06-07:00</updated>
  <id>http://khakimov.github.com/</id>
  <author>
    <name><![CDATA[khakimov]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Playing with HackerNews]]></title>
    <link href="http://khakimov.github.com/blog/2012/03/20/playing-with-hackernews/"/>
    <updated>2012-03-20T21:56:00-07:00</updated>
    <id>http://khakimov.github.com/blog/2012/03/20/playing-with-hackernews</id>
    <content type="html"><![CDATA[<p>Since monday I started playing with RubyOnRails and very happy that I
didn't skip Ruby part as many beginers mistakenly do. I'm reading <a href="http://pragprog.com/book/rails4/agile-web-development-with-rails">Agile Web Development with Rails</a> (big thanks to <a href="http://ap.thinkeffect.com">Andrija</a>) now and still have a lot of questions, but
today want to talk about other things.</p>

<p>As you know many books and tutorials show boring examples like "Hello Word" and my inflamed brain alwayls is looking for opportunity. To build, to parse or hack something. Today when I was waiting my turkey sandwitch in Palo Alto Cafe I read comment where is an author is talking about hackernews karma, like how is awesome to have large karma. I also checked his submissions and realised he just posted random stuff from techcrunch/gizmodo/mashable/etc. So, why not to try post new on HN with ruby?</p>

<p>I certainly do not intend to increase my karma with spam HN, but I was
interested to do it and going to share just few things about the
process.</p>

<h2>How to get fnid? </h2>

<p>To post something on HN you have to know fnid which generate everytime
when you GET <a href="http://news.ycombinator.com/submit">http://news.ycombinator.com/submit</a>.</p>

<p>```ruby
require 'nokogiri'
require 'open-uri'</p>

<p>def fetch
  submit_html = open('http://news.ycombinator.com/submit', "Cookie" =>
'user=check_yours_cookie_and_put_here').read
  doc = Nokogiri::HTML.parse(submit_html)
  doc.xpath('//form/input')[0]['value']
end
```</p>

<h2>Posting</h2>

<p>Method fetch returns fnid. Ok, now we are going to submit our news with
method post:</p>

<p>```ruby
require "net/http"</p>

<p>def post(url, title)
  fnid = fetch #our fetch method
  params = {'fnid' => fnid, 't' => title, 'u' => url }
  uri = URI.parse('http://news.ycombinator.com/r')
  http = Net::HTTP.new(uri.host, uri.port)</p>

<p>  # the most interesting part. make headers with
  # Cookie and Referer, also you can add User-Agent
  request = Net::HTTP::Post.new(uri.request_uri)
  request.set_form_data(params)
  request["Cookie"] = 'user=check_yours_cookie_and_put_here'
  request["Referer"] = 'http://news.ycombinator.com/submit'</p>

<p>  response = http.request(request)
end
```</p>

<p>Nice and simple, that's why I fall in love with Ruby. Here is my
sandwich arrived ;)</p>
]]></content>
  </entry>
  
</feed>
